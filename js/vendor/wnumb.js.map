{"version":3,"sources":["webpack://step.loc/./src/js/vendor/wnumb.js","webpack://step.loc/webpack/bootstrap","webpack://step.loc/webpack/startup"],"names":["factory","define","FormatOptions","strReverse","a","split","reverse","join","strStartsWith","input","match","substring","length","strEndsWith","slice","throwEqualError","F","b","Error","isValidNumber","isFinite","toFixed","value","exp","toString","Math","round","formatTo","decimals","thousand","mark","prefix","suffix","encoder","decoder","negativeBefore","negative","edit","undo","originalInput","inputIsNegative","inputPieces","inputBase","inputDecimals","output","parseFloat","abs","indexOf","formatFrom","replace","Number","validate","inputOptions","i","optionName","optionValue","filteredOptions","undefined","passAll","options","method","args","push","apply","wNumb","to","from"],"mappings":"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","file":"/public/js/vendor/wnumb.js","sourcesContent":["(function(factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === \"object\") {\n    // Node/CommonJS\n    module.exports = factory();\n  } else {\n    // Browser globals\n    window.wNumb = factory();\n  }\n})(function() {\n  \"use strict\";\n\n  var FormatOptions = [\n    \"decimals\",\n    \"thousand\",\n    \"mark\",\n    \"prefix\",\n    \"suffix\",\n    \"encoder\",\n    \"decoder\",\n    \"negativeBefore\",\n    \"negative\",\n    \"edit\",\n    \"undo\"\n  ];\n\n  // General\n\n  // Reverse a string\n  function strReverse(a) {\n    return a\n      .split(\"\")\n      .reverse()\n      .join(\"\");\n  }\n\n  // Check if a string starts with a specified prefix.\n  function strStartsWith(input, match) {\n    return input.substring(0, match.length) === match;\n  }\n\n  // Check is a string ends in a specified suffix.\n  function strEndsWith(input, match) {\n    return input.slice(-1 * match.length) === match;\n  }\n\n  // Throw an error if formatting options are incompatible.\n  function throwEqualError(F, a, b) {\n    if ((F[a] || F[b]) && F[a] === F[b]) {\n      throw new Error(a);\n    }\n  }\n\n  // Check if a number is finite and not NaN\n  function isValidNumber(input) {\n    return typeof input === \"number\" && isFinite(input);\n  }\n\n  // Provide rounding-accurate toFixed method.\n  // Borrowed: http://stackoverflow.com/a/21323330/775265\n  function toFixed(value, exp) {\n    value = value.toString().split(\"e\");\n    value = Math.round(+(value[0] + \"e\" + (value[1] ? +value[1] + exp : exp)));\n    value = value.toString().split(\"e\");\n    return (+(value[0] + \"e\" + (value[1] ? +value[1] - exp : -exp))).toFixed(exp);\n  }\n\n  // Formatting\n\n  // Accept a number as input, output formatted string.\n  function formatTo(\n    decimals,\n    thousand,\n    mark,\n    prefix,\n    suffix,\n    encoder,\n    decoder,\n    negativeBefore,\n    negative,\n    edit,\n    undo,\n    input\n  ) {\n    var originalInput = input,\n      inputIsNegative,\n      inputPieces,\n      inputBase,\n      inputDecimals = \"\",\n      output = \"\";\n\n    // Apply user encoder to the input.\n    // Expected outcome: number.\n    if (encoder) {\n      input = encoder(input);\n    }\n\n    // Stop if no valid number was provided, the number is infinite or NaN.\n    if (!isValidNumber(input)) {\n      return false;\n    }\n\n    // Rounding away decimals might cause a value of -0\n    // when using very small ranges. Remove those cases.\n    if (decimals !== false && parseFloat(input.toFixed(decimals)) === 0) {\n      input = 0;\n    }\n\n    // Formatting is done on absolute numbers,\n    // decorated by an optional negative symbol.\n    if (input < 0) {\n      inputIsNegative = true;\n      input = Math.abs(input);\n    }\n\n    // Reduce the number of decimals to the specified option.\n    if (decimals !== false) {\n      input = toFixed(input, decimals);\n    }\n\n    // Transform the number into a string, so it can be split.\n    input = input.toString();\n\n    // Break the number on the decimal separator.\n    if (input.indexOf(\".\") !== -1) {\n      inputPieces = input.split(\".\");\n\n      inputBase = inputPieces[0];\n\n      if (mark) {\n        inputDecimals = mark + inputPieces[1];\n      }\n    } else {\n      // If it isn't split, the entire number will do.\n      inputBase = input;\n    }\n\n    // Group numbers in sets of three.\n    if (thousand) {\n      inputBase = strReverse(inputBase).match(/.{1,3}/g);\n      inputBase = strReverse(inputBase.join(strReverse(thousand)));\n    }\n\n    // If the number is negative, prefix with negation symbol.\n    if (inputIsNegative && negativeBefore) {\n      output += negativeBefore;\n    }\n\n    // Prefix the number\n    if (prefix) {\n      output += prefix;\n    }\n\n    // Normal negative option comes after the prefix. Defaults to '-'.\n    if (inputIsNegative && negative) {\n      output += negative;\n    }\n\n    // Append the actual number.\n    output += inputBase;\n    output += inputDecimals;\n\n    // Apply the suffix.\n    if (suffix) {\n      output += suffix;\n    }\n\n    // Run the output through a user-specified post-formatter.\n    if (edit) {\n      output = edit(output, originalInput);\n    }\n\n    // All done.\n    return output;\n  }\n\n  // Accept a sting as input, output decoded number.\n  function formatFrom(\n    decimals,\n    thousand,\n    mark,\n    prefix,\n    suffix,\n    encoder,\n    decoder,\n    negativeBefore,\n    negative,\n    edit,\n    undo,\n    input\n  ) {\n    var originalInput = input,\n      inputIsNegative,\n      output = \"\";\n\n    // User defined pre-decoder. Result must be a non empty string.\n    if (undo) {\n      input = undo(input);\n    }\n\n    // Test the input. Can't be empty.\n    if (!input || typeof input !== \"string\") {\n      return false;\n    }\n\n    // If the string starts with the negativeBefore value: remove it.\n    // Remember is was there, the number is negative.\n    if (negativeBefore && strStartsWith(input, negativeBefore)) {\n      input = input.replace(negativeBefore, \"\");\n      inputIsNegative = true;\n    }\n\n    // Repeat the same procedure for the prefix.\n    if (prefix && strStartsWith(input, prefix)) {\n      input = input.replace(prefix, \"\");\n    }\n\n    // And again for negative.\n    if (negative && strStartsWith(input, negative)) {\n      input = input.replace(negative, \"\");\n      inputIsNegative = true;\n    }\n\n    // Remove the suffix.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice\n    if (suffix && strEndsWith(input, suffix)) {\n      input = input.slice(0, -1 * suffix.length);\n    }\n\n    // Remove the thousand grouping.\n    if (thousand) {\n      input = input.split(thousand).join(\"\");\n    }\n\n    // Set the decimal separator back to period.\n    if (mark) {\n      input = input.replace(mark, \".\");\n    }\n\n    // Prepend the negative symbol.\n    if (inputIsNegative) {\n      output += \"-\";\n    }\n\n    // Add the number\n    output += input;\n\n    // Trim all non-numeric characters (allow '.' and '-');\n    output = output.replace(/[^0-9\\.\\-.]/g, \"\");\n\n    // The value contains no parse-able number.\n    if (output === \"\") {\n      return false;\n    }\n\n    // Covert to number.\n    output = Number(output);\n\n    // Run the user-specified post-decoder.\n    if (decoder) {\n      output = decoder(output);\n    }\n\n    // Check is the output is valid, otherwise: return false.\n    if (!isValidNumber(output)) {\n      return false;\n    }\n\n    return output;\n  }\n\n  // Framework\n\n  // Validate formatting options\n  function validate(inputOptions) {\n    var i,\n      optionName,\n      optionValue,\n      filteredOptions = {};\n\n    if (inputOptions[\"suffix\"] === undefined) {\n      inputOptions[\"suffix\"] = inputOptions[\"postfix\"];\n    }\n\n    for (i = 0; i < FormatOptions.length; i += 1) {\n      optionName = FormatOptions[i];\n      optionValue = inputOptions[optionName];\n\n      if (optionValue === undefined) {\n        // Only default if negativeBefore isn't set.\n        if (optionName === \"negative\" && !filteredOptions.negativeBefore) {\n          filteredOptions[optionName] = \"-\";\n          // Don't set a default for mark when 'thousand' is set.\n        } else if (optionName === \"mark\" && filteredOptions.thousand !== \".\") {\n          filteredOptions[optionName] = \".\";\n        } else {\n          filteredOptions[optionName] = false;\n        }\n\n        // Floating points in JS are stable up to 7 decimals.\n      } else if (optionName === \"decimals\") {\n        if (optionValue >= 0 && optionValue < 8) {\n          filteredOptions[optionName] = optionValue;\n        } else {\n          throw new Error(optionName);\n        }\n\n        // These options, when provided, must be functions.\n      } else if (\n        optionName === \"encoder\" ||\n        optionName === \"decoder\" ||\n        optionName === \"edit\" ||\n        optionName === \"undo\"\n      ) {\n        if (typeof optionValue === \"function\") {\n          filteredOptions[optionName] = optionValue;\n        } else {\n          throw new Error(optionName);\n        }\n\n        // Other options are strings.\n      } else {\n        if (typeof optionValue === \"string\") {\n          filteredOptions[optionName] = optionValue;\n        } else {\n          throw new Error(optionName);\n        }\n      }\n    }\n\n    // Some values can't be extracted from a\n    // string if certain combinations are present.\n    throwEqualError(filteredOptions, \"mark\", \"thousand\");\n    throwEqualError(filteredOptions, \"prefix\", \"negative\");\n    throwEqualError(filteredOptions, \"prefix\", \"negativeBefore\");\n\n    return filteredOptions;\n  }\n\n  // Pass all options as function arguments\n  function passAll(options, method, input) {\n    var i,\n      args = [];\n\n    // Add all options in order of FormatOptions\n    for (i = 0; i < FormatOptions.length; i += 1) {\n      args.push(options[FormatOptions[i]]);\n    }\n\n    // Append the input, then call the method, presenting all\n    // options as arguments.\n    args.push(input);\n    return method.apply(\"\", args);\n  }\n\n  function wNumb(options) {\n    if (!(this instanceof wNumb)) {\n      return new wNumb(options);\n    }\n\n    if (typeof options !== \"object\") {\n      return;\n    }\n\n    options = validate(options);\n\n    // Call 'formatTo' with proper arguments.\n    this.to = function(input) {\n      return passAll(options, formatTo, input);\n    };\n\n    // Call 'formatFrom' with proper arguments.\n    this.from = function(input) {\n      return passAll(options, formatFrom, input);\n    };\n  }\n\n  return wNumb;\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__(\"./src/js/vendor/wnumb.js\");\n// This entry module used 'module' so it can't be inlined\n"],"sourceRoot":""}